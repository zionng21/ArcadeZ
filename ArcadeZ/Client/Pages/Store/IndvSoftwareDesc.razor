@page "/store/software/{id:int}"
@inject HttpClient _client
@inject NavigationManager _navManager
@inject AuthenticationStateProvider GetAuthenticationStateAsync

<div>
	<p>@productSoftware.sTitle</p>
	<p>@productSoftware.Description</p>
	<p>@productSoftware.Category</p>
			
	@if(Disabled == false){
		<button class="btn btn-primary" @onclick="AddToCart">Add to Cart</button>
	}
	else
	{
		<button class="btn btn-primary" @onclick="GoToCart">In Cart</button>
	}
</div>

@code {

	[Parameter] public int id { get; set; }
	TempCart? tempCart = new TempCart();
	ProductSoftware? productSoftware = new ProductSoftware();
	private List<TempCart>? tempCarts;
	private List<TempCart>? custCart = new List<TempCart>();
	private List<Customer>? customers;
	private int CustId;

    public bool Disabled { get; set; } = false;

	private async Task AddToCart()
	{

		tempCart.Quantity = 1;
		tempCart.ProductSoftwareId = productSoftware.Id;
		tempCart.CustomerId = CustId;
		await _client.PostAsJsonAsync(Endpoints.TempCartsEndpoint, tempCart);
		_navManager.NavigateTo("/cart/");
	}
	private void GoToCart()
	{
		_navManager.NavigateTo("/cart/");
	}

	protected async override Task OnParametersSetAsync()
	{

		productSoftware = await _client.GetFromJsonAsync<ProductSoftware>($"{Endpoints.ProductSoftwaresEndpoint}/{id}");
		tempCarts = await _client.GetFromJsonAsync<List<TempCart>>($"{Endpoints.TempCartsEndpoint}");
		customers = await _client.GetFromJsonAsync<List<Customer>>($"{Endpoints.CustomersEndpoint}");

		var authstate = await GetAuthenticationStateAsync.GetAuthenticationStateAsync();
		var user = authstate.User;
		var name = user.Identity.Name;

		foreach (var customer in customers)
		{
			if (customer.Email == name)
			{
				CustId = customer.Id;
			}
		}
		if (tempCarts.Count != 0)
		{
			foreach (var tempcart in tempCarts)
			{
				if (tempcart.CustomerId == CustId)
				{
					custCart.Add(tempcart);
				}

			}
		}
		if (custCart.Count != 0)
		{
			foreach (var custCartItem in custCart)
			{
				if (custCartItem.ProductSoftwareId != null)
				{
					if (custCartItem.ProductSoftwareId == productSoftware.Id)
					{
						Disabled = true;
					}
				}
			}
		}
	}
}
