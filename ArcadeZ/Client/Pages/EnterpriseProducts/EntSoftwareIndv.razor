@page "/enterpriseProducts/software/{id:int}"
@inject HttpClient _client
@inject NavigationManager _navManager

<h3 style="padding-top:1rem;" class=" card-title text-center p-5 mt-1">Edit Software Product</h3>
<div class="border-top px-2 mx-2 pb-1" style="background-color:#1ABC9C;"></div>

<div class="container mt-5 pb-5">
    <div style="width: 26rem; box-shadow: 0 0 15px rgba(26, 188, 156, 0.5);" class="mx-auto border border-2 p-3">
        <div class="form-group pt-4 text-center">
            <div>
                @if (productSoftware.sthumbnail == null)
                {
                    <div class="form-group">
                        <label >Image: </label>
                        <div>
                            <InputFile OnChange="HandleFileSelected"></InputFile>
                        </div>
                    </div>
                }
                @if (productSoftware.sthumbnail != null)
                {
                    <div class="form-group">
                        <label>Image: </label>
                        <img src="@("data:image/png;base64," + Convert.ToBase64String(productSoftware.sthumbnail))" alt="image" />
                        <InputFile OnChange="HandleFileSelected"></InputFile>
                    </div>

                }
            </div>
            <div class="form-group">
                <label>Title: </label>
                <div>
                    <InputText @bind-Value="@productSoftware.sTitle" class="form-control" />
                </div>
            </div>

            <div class="form-group">
                <label>Price: </label>
                <div>
                    <InputNumber @bind-Value="@productSoftware.sPrice" class="form-control" />
                </div>
            </div>

            <div class="form-group">
                <label>Category: </label>
                <div>
                    <InputText @bind-Value="@productSoftware.Category" class="form-control" />
                </div>
            </div>
            
            <div class="form-group">
                <label>Description: </label>
                <div>
                    <InputTextArea @bind-Value="@productSoftware.Description" class="form-control" />
                </div>
            </div>

            <div class="d-grid gap-2 pt-2">
            <button @onclick="EditProductSoftware" type="submit" class="btn btn-success btn-block">
                Save
            </button>
            <div/>
        </div>
    </div>
</div>
</div>

@code {

	[Parameter] public int id { get; set; }
    private byte[] imageBytes;
	ProductSoftware? productSoftware = new ProductSoftware();

	protected async override Task OnParametersSetAsync()
	{
		productSoftware = await _client.GetFromJsonAsync<ProductSoftware>($"{Endpoints.ProductSoftwaresEndpoint}/{id}");
	}

	async Task EditProductSoftware()
	{
		await _client.PutAsJsonAsync($"{Endpoints.ProductSoftwaresEndpoint}/{id}", productSoftware);
        _navManager.NavigateTo("/enterpriseProducts/");
	}

    private async Task HandleFileSelected(InputFileChangeEventArgs e)
    {
        var file = e.File;

        if (file != null)
        {
            var resizedFile = await file.RequestImageFileAsync(file.ContentType, 376, 282);
            // Read the selected file
            using (var stream = resizedFile.OpenReadStream())
            {
                // Convert the file content to a byte array
                using (var memoryStream = new MemoryStream())
                {
                    await stream.CopyToAsync(memoryStream);
                    imageBytes = memoryStream.ToArray();

                    // Assign the byte array to the productSoftware.thumbnail property
                    productSoftware.sthumbnail = imageBytes;
                }
            }
        }
    }
}
