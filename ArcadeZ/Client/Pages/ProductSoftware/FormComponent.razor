<EditForm Model="@productSoftware" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Title: </label>
        <div>
            <InputText @bind-Value="@productSoftware.sTitle" class="form-control" />
            <ValidationMessage For="@(() => productSoftware.sTitle)" />
        </div>
    </div>

    <div class="form-group">
        <label>Price: </label>
        <div>
            <InputNumber @bind-Value="@productSoftware.sPrice" class="form-control" />
            <ValidationMessage For="@(() => productSoftware.sPrice)" />
        </div>
    </div>

    <div class="form-group">
        <label>Category: </label>
        <div>
            <InputText @bind-Value="@productSoftware.Category" class="form-control" />
            <ValidationMessage For="@(() => productSoftware.Category)" />
        </div>
    </div>

    <div class="form-group">
        <label>Description: </label>
        <div>
            <InputTextArea @bind-Value="@productSoftware.Description" class="form-control" />
            <ValidationMessage For="@(() => productSoftware.Description)" />
        </div>
    </div>

    <div class="form-group">
        <label>Enterprise ID: </label>
        <div>
            <InputNumber @bind-Value="@productSoftware.EnterpriseId" class="form-control" />
            <ValidationMessage For="@(() => productSoftware.EnterpriseId)" />
        </div>
    </div>

    <button type="submit" class="btn btn-success btn-block">
        @ButtonText
    </button>

    <BackToList Target="productsoftwares" />

</EditForm>


@code {

    [Parameter] public ProductSoftware? productSoftware { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

}
