@page "/support/custOrder"
@inject HttpClient _client
@inject AuthenticationStateProvider GetAuthenticationStateAsync
@attribute [Authorize]

<h3 style="padding-top:1rem;" class=" card-title text-center p-5 mt-1">Which Order Will You Like To Enquire For?</h3>
<div class="border-top px-2 mx-2 pb-1" style="background-color:#1ABC9C;"></div>

@if(currCustOrders.Count == 0)
{
	<div class="alert alert-info pt-4">No Order History</div>
}
else
{
	<div class="container pt-4">
		<div class="row">
			<div class="col-md-12">
				<table class="table">
					<tbody>
						@foreach(var currCustOrder in currCustOrders)
						{
							<tr>
								<td>
									<a href="/support/custOrder/@currCustOrder.Id" class="btn btn-primary btn-block rowBtn">Order #@currCustOrder.Id @currCustOrder.OrderDateTime</a>
								</td>
							</tr>
						}
					</tbody>
				</table>
			</div>
		</div>
	</div>
}
<div class="pb-5">
	<p></p>
</div>

@code {
	private List<Customer>? customers;
	private List<CustOrder>? custOrders;
	private List<CustOrder>? currCustOrders = new List<CustOrder>();
	private int CustId;

	protected async override Task OnInitializedAsync()
	{
		customers = await _client.GetFromJsonAsync<List<Customer>>($"{Endpoints.CustomersEndpoint}");
		custOrders = await _client.GetFromJsonAsync<List<CustOrder>>($"{Endpoints.CustOrdersEndpoint}");

		var authstate = await GetAuthenticationStateAsync.GetAuthenticationStateAsync();
		var user = authstate.User;
		var name = user.Identity.Name;

		foreach (var customer in customers)
		{
			if (customer.Email == name)
			{
				CustId = customer.Id;
			}
		}

		if(custOrders != null)
		{
			foreach(var custOrder in custOrders)
			{
				if(custOrder.CustomerId == CustId)
				{
					currCustOrders.Add(custOrder);
				}
			}	
		}
	}
}
