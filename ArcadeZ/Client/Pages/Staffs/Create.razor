@* Staff - Create.razor
------------------ *@
@page "/staffs/create/"
@inject HttpClient _client
@inject NavigationManager _navManager

<h3 class="card-title">Create New Staff</h3>
<hr />
<br />

<EditForm Model="@staff" OnValidSubmit="CreateStaff">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Name: </label>
        <div>
            <InputText @bind-Value="@staff.Name" class="form-control" />
            <ValidationMessage For="@(() => staff.Name)" />
        </div>
    </div>

    <div class="form-group">
        <label>Email Address: </label>
        <div>
            <InputText @bind-Value="@staff.Email" class="form-control" />
            <ValidationMessage For="@(() => staff.Email)" />
        </div>
    </div>

    <div class="form-group">
        <label>Department: </label>
        <div>
            <InputSelect @bind-Value="staff.Department" class="form-control">
                <option value="">-- Select Department --</option>
                
                @if (departmentList != null)
                {
                    foreach (var department in departmentList)
                    {
                        <option value="@department">@department</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="@(() => staff.Department)" />
        </div>
    </div>

    <button type="submit" class="btn btn-success btn-block">
        Create Staff
    </button>

</EditForm>


@code {
    Staff staff = new Staff();
    List<string>departmentList = new List<string> { "Customer Service", "Logistic", "Marketing" };
    private async Task CreateStaff()
    {
        await _client.PostAsJsonAsync(Endpoints.StaffsEndpoint, staff);
        _navManager.NavigateTo("/staffs/");
    }

}