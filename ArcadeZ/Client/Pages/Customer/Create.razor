@page "/customers/create/"
@inject HttpClient _client
@inject NavigationManager _navManager

<h3 class="card-title">Create New Customer</h3>
<hr />
<br />

<EditForm Model="@customer" OnValidSubmit="CreateCustomer">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>First Name: </label>
        <InputText @bind-Value="@customer.FirstName" class="form-control" />
        <ValidationMessage For="@(() => customer.FirstName)" />
    </div>

    <div class="form-group">
        <label>Last Name: </label>
        <InputText @bind-Value="@customer.LastName" class="form-control" />
        <ValidationMessage For="@(() => customer.LastName)" />
    </div>

    <div class="form-group">
        <label>Username: </label>
        <InputText @bind-Value="@customer.UserName" class="form-control" />
        <ValidationMessage For="@(() => customer.UserName)" />
    </div>

    <div class="form-group">
        <label>Address: </label>
        <InputText @bind-Value="@customer.Address" class="form-control" />
        <ValidationMessage For="@(() => customer.Address)" />
    </div>

    <div class="form-group">
        <label>Email: </label>
        <InputText @bind-Value="@customer.Email" type="email" class="form-control" />
        <ValidationMessage For="@(() => customer.Email)" />
    </div>

    <div class="form-group">
        <label>Date of Birth: </label>
        <InputDate @bind-Value="@customer.DateOfBirth" class="form-control" />
        <ValidationMessage For="@(() => customer.DateOfBirth)" />
    </div>

    <div class="form-group">
        <label>Password: </label>
        <InputText @bind-Value="@customer.Password" type="password" class="form-control" />
        <ValidationMessage For="@(() => customer.Password)" />
    </div>

    <button type="submit" class="btn btn-success btn-block">Create Customer</button>
</EditForm>

@code {
    Customer customer = new Customer();

    private async Task CreateCustomer()
    {
        await _client.PostAsJsonAsync(Endpoints.CustomersEndpoint, customer);
        _navManager.NavigateTo("/customers/");
    }
}
}