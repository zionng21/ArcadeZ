@page "/customers/"
@inject HttpClient _client
@inject IJSRuntime js
@inject HttpInterceptorService _interceptor
@implements IDisposable
@attribute [Authorize]

<h3 style="padding-top:1rem;" class=" card-title text-center p-5 mt-1">Admin View Page</h3>
<div class="border-top px-2 mx-2 pb-1" style="background-color:#1ABC9C;"></div>
<h3 class="card-title">Customer Creation</h3>
<a href="/customers/create" class="btn btn-secondary">
	<span class="oi oi-plus"></span>
	Create New Customer
</a>
<br />
<br />
<h3 class="card-title">Customer</h3>

@if (Customers == null)
{
	<div class="alert alert-info">Loading Customer...</div>
}
else
{
	<table class="table table-responsive">
		<thead>
			<tr>
				<th>Name</th>
				<th>Address</th>
				<th>Email</th>
				<th>Date of Birth</th>
				<th>Password</th>
				<th>Actions</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var customer in Customers)
			{
				<tr>
					<td>@customer.FirstName @customer.LastName</td>
					<td>@customer.Address</td>
					<td>@customer.Email</td>
					<td>@customer.DateOfBirth</td>
					<td>@customer.Password</td>
					<td>
						<a href="/customers/view/@customer.Id" class="btn btn-primary">
							<span class="oi oi-book"></span>
						</a>
						<a href="/customers/edit/@customer.Id" class="btn btn-warning">
							<span class="oi oi-pencil"></span>
						</a>
						<button class="btn btn-danger" @onclick="@(()=>Delete(customer.Id))">
							<span class="oi oi-delete"></span>
						</button>
					</td>
				</tr>
			}
		</tbody>
	</table>	
}

@code {
	private List<Customer>? Customers;

	protected async override Task OnInitializedAsync()
	{
		_interceptor.MonitorEvent();
		Customers = await _client.GetFromJsonAsync<List<Customer>>($"{Endpoints.CustomersEndpoint}");
	}

	async Task Delete(int CustomerId)
	{
		if (Customers != null)
		{
			var customer = Customers.First(q => q.Id == CustomerId);
			var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {customer.FirstName}?");
			if (confirm)
			{
				await _client.DeleteAsync($"{Endpoints.CustomersEndpoint}/{CustomerId}");
				await OnInitializedAsync();
			}
		}
	}

	public void Dispose()
	{
		_interceptor.DisposeEvent();
	}
}
